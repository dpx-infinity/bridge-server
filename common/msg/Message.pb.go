// Code generated by protoc-gen-go.
// source: Message.proto
// DO NOT EDIT!

package msg

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type Message struct {
    Name             *string     `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
    Headers          []*Header   `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty"`
    BodyParts        []*BodyPart `protobuf:"bytes,3,rep,name=bodyParts" json:"bodyParts,omitempty"`
    XXX_unrecognized []byte      `json:"-"`
}

func (this *Message) Reset()         { *this = Message{} }
func (this *Message) String() string { return proto.CompactTextString(this) }
func (*Message) ProtoMessage()       {}

func (this *Message) GetName() string {
    if this != nil && this.Name != nil {
        return *this.Name
    }
    return ""
}

type Header struct {
    Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
    Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
    XXX_unrecognized []byte  `json:"-"`
}

func (this *Header) Reset()         { *this = Header{} }
func (this *Header) String() string { return proto.CompactTextString(this) }
func (*Header) ProtoMessage()       {}

func (this *Header) GetName() string {
    if this != nil && this.Name != nil {
        return *this.Name
    }
    return ""
}

func (this *Header) GetValue() string {
    if this != nil && this.Value != nil {
        return *this.Value
    }
    return ""
}

type BodyPart struct {
    Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
    Data             []byte  `protobuf:"bytes,2,req,name=data" json:"data,omitempty"`
    XXX_unrecognized []byte  `json:"-"`
}

func (this *BodyPart) Reset()         { *this = BodyPart{} }
func (this *BodyPart) String() string { return proto.CompactTextString(this) }
func (*BodyPart) ProtoMessage()       {}

func (this *BodyPart) GetName() string {
    if this != nil && this.Name != nil {
        return *this.Name
    }
    return ""
}

func (this *BodyPart) GetData() []byte {
    if this != nil {
        return this.Data
    }
    return nil
}

func init() {
}
